theme(plot.title = element_text(hjust = 0.5,size=30),
axis.title.y =element_text(hjust = 0.5,size=25,face="bold"),
axis.text.y=element_text(size=22),
axis.title.x =element_text(hjust = 0.5,size=25,face="bold"),
axis.text.x=element_text(size=22),
legend.title=element_text(hjust = 0.5,size=25),
legend.text=element_text(size=22)) +
theme(legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
axis.text = element_text(size = 14))
print(draw_plot)
}
##############################################################################
x0 <- c(1e-04, 0.05)
opts <- list( "algorithm" = "NLOPT_LN_SBPLX", #"NLOPT_LN_NEWUOA", #"NLOPT_LN_SBPLX" , #"NLOPT_LN_BOBYQA" #"NLOPT_LN_COBYLA"
"xtol_rel" = 1e-07,
"ftol_rel" = 1e-07,
"ftol_abs" = 0.0,
"xtol_abs" = 0.0 ,
"maxeval" = 1000,
"print_level" = 1)
optimization <- nloptr::nloptr(x0 = x0,
eval_f = obj_func,
lb	= c(0,0),
ub = c(100,100),
opts = opts,
metric = "rmse",
PFAS = PFNA,
Cwater = 0.005, #mg/L
age = 1)
PFNA_params <- c("Fsorption" = optimization$solution[1],
"ke" = optimization$solution[2])
plot_func(optimization, PFAS = PFNA, Cwater = 0.005, age = 1)
# Fitted parameters
Fsorption <- PFNA_params["Fsorption"]
ke <- PFNA_params["ke"]
# Water concentration
Cw <- 0.005 * 1e06 #ng/L
exp_time <- PFNA$Time
sol_times <- seq(0,round(max(PFNA$Time))+1, 0.01 )
inits <- c('C_daphnia'= 0, "Cw" = Cw)
params <- c("init_age"=1, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
a = "peri"
a == "peri"
a == "periklis"
AAFE <- function(observations, predictions, times=NULL){
y_obs <- unlist(observations)
y_pred <- unlist(predictions)
# Total number of observations
N<- length(y_obs)
log_ratio <- rep(NA, N)
for ( i in 1:N){
log_ratio[i] <- abs(log((y_pred[i]/y_obs[i]), base = 10))
}
aafe <- 10^(sum(log_ratio)/N)
return(aafe)
}
ode_func <- function(time, inits, params){
with(as.list(c(inits, params)),{
# Units explanation:
# C_daphnia: ng PFAS/g D.magna WW
# ke: 1/h
# Cw: ng/L
# Fsorption:  L/d/g D.magna WW
age <- init_age + time
#size in mm
size <- Size_estimation(age, temperature = 20, food="high")
# Filtation rate in mL/h
Frate <- Filtration_rate_estimation(size, temperature = 20, method = "Preuss")
# Filtation rate in L/day
Frate <- Frate * 24/1000
# dry weight mg
DW <- dry_weight_estimation(size)
# Convert DW to WW
WW <- 15 * DW  # Conversion rate 11-20 from DW to WW (Garner et al., 2018)
# Another post discussing DW to WW can be accessed through:
#https://www.madsci.org/posts/archives/2005-09/1127049424.Zo.r.html
# Water concentration in ng/L
dCw <- 0
# D.magna concentration in ng/g
dC_daphnia <- Frate*Cw/WW +  Fsorption*Cw/WW  - ke*C_daphnia
return(list(c("dCw" = dCw, "dC_daphnia" = dC_daphnia), "Frate" = Frate,
"WW" = WW))
})
}
optimization_pfna <- nloptr::nloptr(x0 = x0,
eval_f = obj_func,
lb	= c(0,0),
ub = c(100,100),
opts = opts,
metric = "rmse",
PFAS = PFNA,
Cwater = 0.005, #mg/L
age = 1)
PFNA_params <- c("Fsorption" = optimization_pfna$solution[1],
"ke" = optimization_pfna$solution[2])
plot_func(optimization_pfna, PFAS = PFNA, Cwater = 0.005, age = 1)
# Fitted parameters
Fsorption <- PFNA_params["Fsorption"]
ke <- PFNA_params["ke"]
# Water concentration
Cw <- 0.005 * 1e06 #ng/L
exp_time <- PFNA$Time
sol_times <- seq(0,round(max(PFNA$Time))+1, 0.01 )
inits <- c('C_daphnia'= 0, "Cw" = Cw)
params_pfna <- c("init_age"=1, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params_pfna,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
optimization_PFUnA <- nloptr::nloptr(x0 = x0,
eval_f = obj_func,
lb	= c(0,0),
ub = c(100,100),
opts = opts,
metric = "rmse",
PFAS = PFUnA,
Cwater = 0.005, #mg/L
age = 1)
PFUnA_params <- c("Fsorption" = optimization_PFUnA$solution[1],
"ke" = optimization_PFUnA$solution[2])
plot_func(optimization_PFUnA, PFAS = PFUnA, Cwater = 0.005, age = 1)
# Fitted parameters
Fsorption <- PFUnA_params["Fsorption"]
ke <- PFUnA_params["ke"]
# Water concentration
Cw <- 0.005 * 1e06 #ng/L
exp_time <- PFUnA$Time
sol_times <- seq(0,round(max(PFUnA$Time))+1, 0.01 )
inits <- c('C_daphnia'= 0, "Cw" = Cw)
params_PFUnA <- c("init_age"=1, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params_PFUnA,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
optimization_PFUnA <- nloptr::nloptr(x0 = x0,
eval_f = obj_func,
lb	= c(0,0),
ub = c(100,100),
opts = opts,
metric = "PBKOF",
PFAS = PFUnA,
Cwater = 0.005, #mg/L
age = 1)
PFUnA_params <- c("Fsorption" = optimization_PFUnA$solution[1],
"ke" = optimization_PFUnA$solution[2])
plot_func(optimization_PFUnA, PFAS = PFUnA, Cwater = 0.005, age = 1)
# Fitted parameters
Fsorption <- PFUnA_params["Fsorption"]
ke <- PFUnA_params["ke"]
# Water concentration
Cw <- 0.005 * 1e06 #ng/L
exp_time <- PFUnA$Time
sol_times <- seq(0,round(max(PFUnA$Time))+1, 0.01 )
inits <- c('C_daphnia'= 0, "Cw" = Cw)
params_PFUnA <- c("init_age"=1, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params_PFUnA,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
params_PFUnA
x0 <- c(1, 0.5)
optimization_PFUnA <- nloptr::nloptr(x0 = x0,
eval_f = obj_func,
lb	= c(0,0),
ub = c(100,100),
opts = opts,
metric = "PBKOF",
PFAS = PFUnA,
Cwater = 0.005, #mg/L
age = 1)
PFUnA_params <- c("Fsorption" = optimization_PFUnA$solution[1],
"ke" = optimization_PFUnA$solution[2])
plot_func(optimization_PFUnA, PFAS = PFUnA, Cwater = 0.005, age = 1)
# Fitted parameters
Fsorption <- PFUnA_params["Fsorption"]
ke <- PFUnA_params["ke"]
# Water concentration
Cw <- 0.005 * 1e06 #ng/L
exp_time <- PFUnA$Time
sol_times <- seq(0,round(max(PFUnA$Time))+1, 0.01 )
inits <- c('C_daphnia'= 0, "Cw" = Cw)
params_PFUnA <- c("init_age"=1, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params_PFUnA,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
x0 <- c(1, 0.5)
optimization_PFUnA <- nloptr::nloptr(x0 = x0,
eval_f = obj_func,
lb	= c(0,0),
ub = c(100,100),
opts = opts,
metric = "rmse",
PFAS = PFUnA,
Cwater = 0.005, #mg/L
age = 1)
PFUnA_params <- c("Fsorption" = optimization_PFUnA$solution[1],
"ke" = optimization_PFUnA$solution[2])
plot_func(optimization_PFUnA, PFAS = PFUnA, Cwater = 0.005, age = 1)
# Fitted parameters
Fsorption <- PFUnA_params["Fsorption"]
ke <- PFUnA_params["ke"]
# Water concentration
Cw <- 0.005 * 1e06 #ng/L
exp_time <- PFUnA$Time
sol_times <- seq(0,round(max(PFUnA$Time))+1, 0.01 )
inits <- c('C_daphnia'= 0, "Cw" = Cw)
params_PFUnA <- c("init_age"=1, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params_PFUnA,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
params_PFUnA
save.image("~/Documents/GitHub/PFAS_biokinetics_models/D.Magna/Results.RData")
load("~/Documents/GitHub/PFAS_biokinetics_models/D.Magna/Results.RData")
x0 <- c(1, 0.5)
optimization_PFDA <- nloptr::nloptr(x0 = x0,
eval_f = obj_func,
lb	= c(0,0),
ub = c(100,100),
opts = opts,
metric = "rmse",
PFAS = PFDA,
Cwater = 0.005, #mg/L
age = 1)
PFDA_params <- c("Fsorption" = optimization_PFUnA$solution[1],
"ke" = optimization_PFUnA$solution[2])
plot_func(optimization_PFDA, PFAS = PFDA, Cwater = 0.005, age = 1)
# Fitted parameters
Fsorption <- PFDA_params["Fsorption"]
ke <- PFDA_params["ke"]
# Water concentration
Cw <- 0.005 * 1e06 #ng/L
exp_time <- PFDA$Time
sol_times <- seq(0,round(max(PFDA$Time))+1, 0.01 )
inits <- c('C_daphnia'= 0, "Cw" = Cw)
params_PFDA <- c("init_age"=1, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params_PFDA,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
x0 <- c(1, 0.5)
optimization_PFUnA <- nloptr::nloptr(x0 = x0,
eval_f = obj_func,
lb	= c(0,0),
ub = c(100,100),
opts = opts,
metric = "rmse",
PFAS = PFUnA,
Cwater = 0.005, #mg/L
age = 1)
PFUnA_params <- c("Fsorption" = optimization_PFUnA$solution[1],
"ke" = optimization_PFUnA$solution[2])
plot_func(optimization_PFUnA, PFAS = PFUnA, Cwater = 0.005, age = 1)
# Fitted parameters
Fsorption <- PFUnA_params["Fsorption"]
ke <- PFUnA_params["ke"]
# Water concentration
Cw <- 0.005 * 1e06 #ng/L
exp_time <- PFUnA$Time
sol_times <- seq(0,round(max(PFUnA$Time))+1, 0.01 )
inits <- c('C_daphnia'= 0, "Cw" = Cw)
params_PFUnA <- c("init_age"=1, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params_PFUnA,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
x0 <- c(1, 0.5)
optimization_PFUnA <- nloptr::nloptr(x0 = x0,
eval_f = obj_func,
lb	= c(0,0),
ub = c(100,100),
opts = opts,
metric = "rmse",
PFAS = PFUnA,
Cwater = 0.005, #mg/L
age = 1)
PFUnA_params <- c("Fsorption" = optimization_PFUnA$solution[1],
"ke" = optimization_PFUnA$solution[2])
plot_func(optimization_PFUnA, PFAS = PFUnA, Cwater = 0.005, age = 1)
# Fitted parameters
Fsorption <- PFUnA_params["Fsorption"]
ke <- PFUnA_params["ke"]
# Water concentration
Cw <- 0.005 * 1e06 #ng/L
exp_time <- PFUnA$Time
sol_times <- seq(0,round(max(PFUnA$Time))+1, 0.01 )
inits <- c('C_daphnia'= 0, "Cw" = Cw)
params_PFUnA <- c("init_age"=1, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params_PFUnA,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
a = 5
myf <- function(a){
print(a)
}
myf(a)
a = 5
myf <- function(a){
print(as.character(a))
}
myf(a)
quote(a)
myf <- function(a){
print(quote(a))
}
myf(a)
b = 5
myf(b)
?substitute
myf <- function(a){
print(substitue(a))
}
myf(b)
myf <- function(a){
print(substitute(a))
}
myf(b)
myf(a)
myf(k)
myf(a = kappa)
kappa = 5
myf(kappa)
a  = "Hi"
b = "Periklis"
print(a,b)
print(paste0(a,b))
print(paste(a,b, sep = " "))
plot_func <- function(optimization, PFAS, Cwater, age){
library(ggplot2)
x <- optimization$solution
# User defined parameters
init_age <- age
# Fitted parameters
Fsorption <- x[1]
ke <- x[2]
# Water concentration
Cw <- Cwater * 1e06 #ng/L
exp_time <- PFAS$Time
sol_times <- seq(0,round(max(PFAS$Time))+1, 0.01 )
inits <- c( "Cw" = Cw, 'C_daphnia'= 0)
params <- c("init_age"=init_age, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
keep_predictions <- data.frame(matrix(NA, nrow = length(sol_times), ncol =2))
keep_predictions[,1] <- sol_times
colnames(keep_predictions) <- c('Time', 'BodyBurden')
keep_predictions[,2] <- solution[,"C_daphnia"]
ggplot()+
geom_line(data = keep_predictions, aes(x=Time, y=BodyBurden), size=1.7)+
geom_point(data = PFAS, aes(x=Time, y=Concentration), size=5)+
labs(title = paste(substitue(PFAS),"body burden in D.magna", sep = " "),
y = "Body burden (ng/g WW)", x = "Time (days)")+
theme(plot.title = element_text(hjust = 0.5,size=30),
axis.title.y =element_text(hjust = 0.5,size=25,face="bold"),
axis.text.y=element_text(size=22),
axis.title.x =element_text(hjust = 0.5,size=25,face="bold"),
axis.text.x=element_text(size=22),
legend.title=element_text(hjust = 0.5,size=25),
legend.text=element_text(size=22)) +
theme(legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
axis.text = element_text(size = 14))
}
plot_func(optimization_PFUnA, PFAS = PFUnA, Cwater = 0.005, age = 1)
plot_func <- function(optimization, PFAS, Cwater, age){
library(ggplot2)
x <- optimization$solution
# User defined parameters
init_age <- age
# Fitted parameters
Fsorption <- x[1]
ke <- x[2]
# Water concentration
Cw <- Cwater * 1e06 #ng/L
exp_time <- PFAS$Time
sol_times <- seq(0,round(max(PFAS$Time))+1, 0.01 )
inits <- c( "Cw" = Cw, 'C_daphnia'= 0)
params <- c("init_age"=init_age, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
keep_predictions <- data.frame(matrix(NA, nrow = length(sol_times), ncol =2))
keep_predictions[,1] <- sol_times
colnames(keep_predictions) <- c('Time', 'BodyBurden')
keep_predictions[,2] <- solution[,"C_daphnia"]
ggplot()+
geom_line(data = keep_predictions, aes(x=Time, y=BodyBurden), size=1.7)+
geom_point(data = PFAS, aes(x=Time, y=Concentration), size=5)+
labs(title = paste(substitute(PFAS),"body burden in D.magna", sep = " "),
y = "Body burden (ng/g WW)", x = "Time (days)")+
theme(plot.title = element_text(hjust = 0.5,size=30),
axis.title.y =element_text(hjust = 0.5,size=25,face="bold"),
axis.text.y=element_text(size=22),
axis.title.x =element_text(hjust = 0.5,size=25,face="bold"),
axis.text.x=element_text(size=22),
legend.title=element_text(hjust = 0.5,size=25),
legend.text=element_text(size=22)) +
theme(legend.key.size = unit(1.5, 'cm'),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
axis.text = element_text(size = 14))
}
plot_func(optimization_PFUnA, PFAS = PFUnA, Cwater = 0.005, age = 1)
plot_func(optimization_pfna, PFAS = PFNA, Cwater = 0.005, age = 1)
plot_func(optimization_PFUnA, PFAS = PFUnA, Cwater = 0.005, age = 1)
plot_func(optimization_pfna, PFAS = PFNA, Cwater = 0.005, age = 1)
x0 <- c(1, 0.5)
optimization_PFDA <- nloptr::nloptr(x0 = x0,
eval_f = obj_func,
lb	= c(0,0),
ub = c(100,100),
opts = opts,
metric = "rmse",
PFAS = PFDA,
Cwater = 0.005, #mg/L
age = 1)
PFDA_params <- c("Fsorption" = optimization_PFDA$solution[1],
"ke" = optimization_PFDA$solution[2])
plot_func(optimization_PFDA, PFAS = PFDA, Cwater = 0.005, age = 1)
# Fitted parameters
Fsorption <- PFDA_params["Fsorption"]
ke <- PFDA_params["ke"]
# Water concentration
Cw <- 0.005 * 1e06 #ng/L
exp_time <- PFDA$Time
sol_times <- seq(0,round(max(PFDA$Time))+1, 0.01 )
inits <- c('C_daphnia'= 0, "Cw" = Cw)
params_PFDA <- c("init_age"=1, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params_PFDA,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
x0 <- c(1, 0.5)
optimization_PFDA <- nloptr::nloptr(x0 = x0,
eval_f = obj_func,
lb	= c(0,0),
ub = c(100,100),
opts = opts,
metric = "PBKOF",
PFAS = PFDA,
Cwater = 0.005, #mg/L
age = 1)
PFDA_params <- c("Fsorption" = optimization_PFDA$solution[1],
"ke" = optimization_PFDA$solution[2])
plot_func(optimization_PFDA, PFAS = PFDA, Cwater = 0.005, age = 1)
# Fitted parameters
Fsorption <- PFDA_params["Fsorption"]
ke <- PFDA_params["ke"]
# Water concentration
Cw <- 0.005 * 1e06 #ng/L
exp_time <- PFDA$Time
sol_times <- seq(0,round(max(PFDA$Time))+1, 0.01 )
inits <- c('C_daphnia'= 0, "Cw" = Cw)
params_PFDA <- c("init_age"=1, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params_PFDA,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
plot_func(optimization_PFOA, PFAS = PFOA, Cwater = 0.005, age = 1)
x0 <- c(1, 0.5)
optimization_PFOA <- nloptr::nloptr(x0 = x0,
eval_f = obj_func,
lb	= c(0,0),
ub = c(100,100),
opts = opts,
metric = "rmse",
PFAS = PFOA,
Cwater = 0.005, #mg/L
age = 1)
PFOA_params <- c("Fsorption" = optimization_PFOA$solution[1],
"ke" = optimization_PFOA$solution[2])
plot_func(optimization_PFOA, PFAS = PFOA, Cwater = 0.005, age = 1)
# Fitted parameters
Fsorption <- PFOA_params["Fsorption"]
ke <- PFOA_params["ke"]
# Water concentration
Cw <- 0.005 * 1e06 #ng/L
exp_time <- PFOA$Time
sol_times <- seq(0,round(max(PFOA$Time))+1, 0.01 )
inits <- c('C_daphnia'= 0, "Cw" = Cw)
params_PFOA <- c("init_age"=1, "Fsorption"= Fsorption, "ke"  = ke)
solution <- data.frame(deSolve::ode(times = sol_times,  func = ode_func,
y = inits,
parms = params_PFOA,
method="lsodes",
rtol = 1e-5, atol = 1e-5))
save.image("~/Documents/GitHub/PFAS_biokinetics_models/D.Magna/plots.RData")
